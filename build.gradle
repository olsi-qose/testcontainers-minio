//file:noinspection GrUnresolvedAccess
//file:noinspection GroovyAssignabilityCheck
import org.gradle.api.tasks.testing.logging.TestLogEvent

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:1.0.1"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:2.0.1"
        classpath "net.ltgt.gradle:gradle-nullaway-plugin:1.1.0"
        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.5"
        classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.31"
    }
}

subprojects { project ->

    apply plugin: 'java'
    apply plugin: 'scalaStyle'
    apply plugin: 'scala'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'net.ltgt.nullaway'
    apply plugin: "com.dorongold.task-tree"
    apply plugin: "jacoco"
    apply plugin: "com.github.maiflai.scalatest"

    group 'org.testcontainers'
    version '1.16.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation group: 'org.scalatest', name: 'scalatest_2.12', version: '3.2.8'
        testImplementation group: 'org.scalatestplus', name: 'junit-4-12_2.12', version: '3.2.2.0'
        testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.12:1.2.0'
        testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.35.10'
        implementation group: 'org.scala-lang', name: 'scala-library', version: '2.12.13'
        errorprone group: 'com.uber.nullaway', name: 'nullaway', version: '0.9.1'
        errorprone group: 'com.google.errorprone', name: 'error_prone_core', version: '2.6.0'
    }

// Configuration for the nullaway extension. The rest of the parameters must be
// specified on the java-compile tasks. The only option that be specified here
// is the name of the root package to be analysed.
    nullaway {
        //noinspection GrUnresolvedAccess
        annotatedPackages.add("org.testcontainers")
        annotatedPackages.add("com.dimafeng")
    }

// Configuration for the Scalastyle plugin. It seems that it isn't possible to define
// the output report formats here and those seem to be defined on the individual
// task level.
    scalaStyle {
        configLocation "project/scalastyle_config.xml"
    }

// Configuration for the Jacoco plugin. It seems that it isn't possible to define
// the output report formats here and those seem to be defined on the individual
// task level.
// I'm not sure why the tool version is defined here and it isn't managed as a
// dependency.
    jacoco {
        toolVersion = "0.8.5"
    }

// We only need the XML report so that the CI tools can parse it. The HTML isn't needed.
    jacocoTestReport {
        reports {
            csv.enabled = true
            xml.enabled = false
            html.enabled = true
        }
    }

    test {
        useJUnitPlatform()
        testLogging.events.addAll([TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED])
        reports {
            junitXml.enabled = true
            html.enabled = true
        }
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }

    javadoc {
        options.addBooleanOption('html5', true)
    }

    scaladoc {
        scalaDocOptions.additionalParameters = ['-no-link-warnings']
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }

    task scaladocJar(type: Jar, dependsOn: scaladoc) {
        archiveClassifier.set("javadoc")
        from scaladoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives scaladocJar
    }

    publishing {
        //noinspection GroovyAssignabilityCheck
        repositories {
            maven {
                name = "github"
                url = uri("https://maven.pkg.github.com/olsi-qose/testcontainers-minio")
                credentials(PasswordCredentials)
            }
        }
        //noinspection GroovyAssignabilityCheck
        publications {
            //noinspection GroovyAssignabilityCheck
            maven(MavenPublication) {
                //noinspection GroovyAssignabilityCheck
                from components.java

                //noinspection GroovyAssignabilityCheck
                artifact sourcesJar
                //noinspection GroovyAssignabilityCheck
                artifact scaladocJar

                pom {
                    //noinspection GroovyAssignabilityCheck
                    name = 'testcontainers-minio'
                    //noinspection GroovyAssignabilityCheck
                    description = 'Add-on module for Jackson (https://jackson.codehaus.org) to support Elasticsearch mapping generation.'
                    //noinspection GroovyAssignabilityCheck
                    url = 'https://github.com/olsi-qose/testcontainers-minio'
                    licenses {
                        license {
                            //noinspection GroovyAssignabilityCheck
                            name = 'The Apache Software License, Version 2.0'
                            //noinspection GroovyAssignabilityCheck
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                            //noinspection GroovyAssignabilityCheck
                            distribution = 'repo'
                        }
                    }
                    scm {
                        //noinspection GroovyAssignabilityCheck
                        url = 'https://github.com/olsi-qose/testcontainers-minio'
                        //noinspection GroovyAssignabilityCheck
                        connection = 'scm:git:git://github.com/olsi-qose/testcontainers-minio'
                        //noinspection GroovyAssignabilityCheck
                        developerConnection = 'scm:git:git://github.com/olsi-qose/testcontainers-minio'
                    }
                    issueManagement {
                        //noinspection GroovyAssignabilityCheck
                        system = "Github"
                        //noinspection GroovyAssignabilityCheck
                        url = "https://github.com/olsi-qose/testcontainers-minio/issues"
                    }
                    developers {
                        developer {
                            //noinspection GroovyAssignabilityCheck
                            id = 'olsi-qose'
                            //noinspection GroovyAssignabilityCheck
                            name = 'Olsi Qose'
                            //noinspection GroovyAssignabilityCheck
                            email = 'olsi.qose@gmail.com'
                        }
                    }
                    contributors {
                        contributor {
                            //noinspection GroovyAssignabilityCheck
                            id = 'mridang'
                            //noinspection GroovyAssignabilityCheck
                            name = 'Mridang Agarwalla'
                            //noinspection GroovyAssignabilityCheck
                            email = 'mridang.agarwalla@gmail.com'
                        }
                    }
                }
            }
        }
    }
}
